连接到sys账号
因为默认的用户（普通的、真实存在的）中没有sys的，所以是没法连接的。
解释：system才是oracle的默认登录用户，此用户是数据库存储中真实存在的，
但是没有sys用户的。但是可以通过： conn sys/sys as sysdba;进行登录，
此时的sys可以换成任何不存在的用户，也是可以登录的。 


定义基本变量
类型:char,varchar2,date,number,boolean,long
show parameter 模糊查询
dbms_output 查看程序包
/ 表示退出编程环境

PL/SQL是对sql语言的扩展
Pl/SQL是面对过程的语言
指在SQL命令语言中增加过程处理语句
使SQL语言具有过程处理能力


PL/SQL基本结构说明之一：declare声明
PL/SQL程序设计结构
declare
说明部分(变量说明、光标说明、例外说明)
begin
语句序列（DML语句）
exception 
例外执行语句
end;
/

在PL/SQL中赋值是:= 还有一种是into关键字
引用型变量
my_name emp.ename%type;
记录型变量
emp_rec emp%rowtype;
记录型变量分量的引用
emp_rec.ename:='ADAMS'
记录型变量是一个数组
PL/SQL中=是判断  :=是赋值


循环语句
WHELE total <=25000 LOOP
...
total:=total +salary
END LOOP

Loop循环
loop
exit [when 条件]
....
end loop;

for循环
FOR I IN 1..3 LOOP
语句序列
END LOOP；

光标就是结果集
光标的语法
CURSOR 光标名 [(参数名  数据类型)[,参数型 数据类型]...]
IS SELECT 语句；
首先是打开一个光标
-open c1;(打开光标执行查询)
取一行光标的值
fetch_c1 into pename;(取一行到变量中)
关闭光标
close c1;(关闭光标释放资源)

光标的四个属性是
取到属性就是%found 
没取到属性就是%notfound
判断光标是否打开 %isopen
影响的行数 %rowcount

光标数的限制
默认情况下，oracle数据库只允许在同一个会话中,打开300个光标

写完pl/sql语句之后
因为是事务，所以说要提交，因为要考虑到事务的隔离性
commit提交
rollback回退
事务4大属性
原子性，一致性，隔离性，持久性

connect 可以缩写为conn  能够缩写就是PL/SQL语句 
修改光标数的限制
alter system set open_cursors=xxx scope=both;
scope是范围的意思
scope的取值有三个
both,memory,spfile 
memory代表只更改当前实例，不更改参数文件
如果写的是spfile 只更改参数文件，不更改当前文件
并且数据库需要重启
both是同时更改

--定义一个光标
cursor cemp is select ename,sal from emp;

带参数的光标
CURSIO 光标名[(参数名 数据类型[,参数名 数据类型]...)]
IS SELECT 语句;

带参数的光标：cursor cemp(dno number) is select ename from emp where deptno=dno;
带参数的光标打开时需要传入参数  
open cemp(10)


例外
例外是程序设计语言提供的一种功能，用来增强程序的健壮性和容错性
可以自己定义一个例外

NO-data_found  (没有找到数据)
Too_many_rows  (select ...into语句匹配多个行)
Zero_Divide (被零除)
Value_error (算术或转换错误)
Timeout_on_resource (在等待资源时发生超时)


自定义例外
定义变量，类型是exception
使用raise抛出自定义例外
其他的跟系统例外的一样，用exception来捕捉
如果oracle在发现这个程序结束了，有资源没有关闭的话
oracle自动启动pmon(process monitor)会将系统中遗留的垃圾与资源一个个释放掉，进行清理


PLSQL程序设计综合
--瀑布模型
首先是需求分析
然后是设计
设计分为
1.概要设计
2.详细设计
编码
Coding
测试
Testing

SQL语句

变量：1 变量的初始值
      2 最终值如何得到


nvl将空值返回为设定的值

  存储过程和存储函数
指存储在数据库中供所有用户程序调用的子程序叫存储过程，存储函数
相同点 完成特定功能的程序 	
存储过程和存储函数的区别 是否用return作为返回值
set severoutput on 打印字符串的开关
用CREATE PROCEDURE命令建立存储过程和存储函数
语法：
create [or replce] PROCEDURE 过程名(参数列表)
AS PLSQL子程序体
带参数的存储过程
调用存储过程
1,exec sayhelloworld();
2.begin
sayhelloworld();
sayhelloworld();
end;


用create procedure命令建立存储过程
语法

create  [or replace] 	procedure 过程名(参数方式);
as

plsql子程序体


存储函数
函数（Function）为一命名的存储程序，可带参数，并返回一计算值
函数和过程的结构类似，但必须有一个return子句，用于返回函数值
create[or peplace] function 函数名(参数列表)
return 函数值类型
AS
PLSQL子程序体;




存储函数
create or replace FUNCTION 函数名（参数列表）
return 函数值类型
AS
PLSQL子程序体；

in和out参数
一般来讲，存储过程和存储函数的区别在于存储函数可以有一个返回值;而存储过程没有返回值
存储过程和存储函数都可以有out参数
存储过程和存储函数都可以有多个out参数
存储过程可以用out参数来实现返回值
原则 
如果只有一个返回值，用于存储函数；否则，就用存储过程



在out参数中使用光标
・申明包结构
包头(申明)
包体(实现)
・案例：查询某个部门中所有员工的所有信息 //ref(reference引用) cursor(光标)
#包头
create or replace package mypackage as
type empcursor is ref cursor;
procedure queryEmpList(dno in number,empList out empcursor);
end mypackage;
#包体
create or replace package body mypackage as
procedure queryEmpList(dno in number,empList out empcursor) as
begin
open empList for select * from emp where deptno=dno;
end queryEmpList;
end mypackage;
***********包体需要实现包头中声明的所有方法*********************


存储过程与存储函数
指存储在数据库中供所有用户程序调用的子程序叫存储过程、存储函数
区别，是否能通过return子句来返回一个值


在应用程序中访问存储过程，存储函数，光标
用接口 Connection，接口 CallableStatement
